"use strict";(self.webpackChunkdoeks_website=self.webpackChunkdoeks_website||[]).push([[9242],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>d});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function s(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?s(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},s=Object.keys(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var i=n.createContext({}),u=function(e){var t=n.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},p=function(e){var t=u(e.components);return n.createElement(i.Provider,{value:t},e.children)},c="mdxType",k={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,s=e.originalType,i=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=u(a),m=r,d=c["".concat(i,".").concat(m)]||c[m]||k[m]||s;return a?n.createElement(d,o(o({ref:t},p),{},{components:a})):n.createElement(d,o({ref:t},p))}));function d(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=a.length,o=new Array(s);o[0]=m;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l[c]="string"==typeof e?e:r,o[1]=l;for(var u=2;u<s;u++)o[u]=a[u];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},3661:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>i,contentTitle:()=>o,default:()=>k,frontMatter:()=>s,metadata:()=>l,toc:()=>u});var n=a(7462),r=(a(7294),a(3905));const s={title:"Argo Workflows on EKS",sidebar_position:4},o="Argo Workflows on EKS",l={unversionedId:"blueprints/job-schedulers/argo-workflows-eks",id:"blueprints/job-schedulers/argo-workflows-eks",title:"Argo Workflows on EKS",description:"Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. It is implemented as a Kubernetes CRD (Custom Resource Definition). As a result, Argo workflows can be managed using kubectl and natively integrates with other Kubernetes services such as volumes, secrets, and RBAC.",source:"@site/docs/blueprints/job-schedulers/argo-workflows-eks.md",sourceDirName:"blueprints/job-schedulers",slug:"/blueprints/job-schedulers/argo-workflows-eks",permalink:"/data-on-eks/docs/blueprints/job-schedulers/argo-workflows-eks",draft:!1,editUrl:"https://github.com/awslabs/data-on-eks/blob/main/website/docs/blueprints/job-schedulers/argo-workflows-eks.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{title:"Argo Workflows on EKS",sidebar_position:4},sidebar:"blueprints",previous:{title:"Airflow on EKS",permalink:"/data-on-eks/docs/blueprints/job-schedulers/self-managed-airflow"},next:{title:"Streaming Platforms on EKS",permalink:"/data-on-eks/docs/category/streaming-platforms-on-eks"}},i={},u=[{value:"Prerequisites:",id:"prerequisites",level:2},{value:"Deploy",id:"deploy",level:2},{value:"Validate",id:"validate",level:2},{value:"Run <code>update-kubeconfig</code> command:",id:"run-update-kubeconfig-command",level:3},{value:"List the nodes",id:"list-the-nodes",level:3},{value:"List the namespaces in EKS cluster",id:"list-the-namespaces-in-eks-cluster",level:3},{value:"Access Argo Workflow WebUI",id:"access-argo-workflow-webui",level:3},{value:"Submit Spark Job with Argo Workflow",id:"submit-spark-job-with-argo-workflow",level:3},{value:"Submit Spark Job with Spark Operator and Argo Workflow",id:"submit-spark-job-with-spark-operator-and-argo-workflow",level:3},{value:"Trigger a workflow to create a spark job based on SQS message",id:"trigger-a-workflow-to-create-a-spark-job-based-on-sqs-message",level:2},{value:"Install eventbus which is for event transmission in argo events",id:"install-eventbus-which-is-for-event-transmission-in-argo-events",level:3},{value:"Deploy <code>eventsource-sqs.yaml</code> to link with external SQS",id:"deploy-eventsource-sqsyaml-to-link-with-external-sqs",level:3},{value:"Deploy <code>sensor-rbac.yaml</code> and <code>sensor-sqs-spark-crossns.yaml</code> for triggering workflow",id:"deploy-sensor-rbacyaml-and-sensor-sqs-spark-crossnsyaml-for-triggering-workflow",level:3},{value:"Verify argo-events namespace",id:"verify-argo-events-namespace",level:3},{value:"Test from SQS",id:"test-from-sqs",level:3},{value:"Destroy",id:"destroy",level:2}],p={toc:u},c="wrapper";function k(e){let{components:t,...s}=e;return(0,r.kt)(c,(0,n.Z)({},p,s,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"argo-workflows-on-eks"},"Argo Workflows on EKS"),(0,r.kt)("p",null,"Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. It is implemented as a Kubernetes CRD (Custom Resource Definition). As a result, Argo workflows can be managed using kubectl and natively integrates with other Kubernetes services such as volumes, secrets, and RBAC."),(0,r.kt)("p",null,"The example demonstrates how to use ",(0,r.kt)("a",{parentName:"p",href:"https://argoproj.github.io/argo-workflows/"},"Argo Workflows")," to assign jobs to Amazon EKS."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Use Argo Workflows to create a spark job."),(0,r.kt)("li",{parentName:"ol"},"Use Argo Workflows to create a spark job through spark operator."),(0,r.kt)("li",{parentName:"ol"},"Trigger Argo Workflows to create a spark job based on Amazon SQS message insert event by using ",(0,r.kt)("a",{parentName:"li",href:"https://argoproj.github.io/argo-events/"},"Argo Events"),".")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/awslabs/data-on-eks/tree/main/schedulers/terraform/argo-workflow"},"Code repo")," for this example."),(0,r.kt)("h2",{id:"prerequisites"},"Prerequisites:"),(0,r.kt)("p",null,"Ensure that you have the following tools installed locally:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("a",{parentName:"li",href:"https://docs.aws.amazon.com/cli/latest/userguide/install-cliv2.html"},"aws cli")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("a",{parentName:"li",href:"https://Kubernetes.io/docs/tasks/tools/"},"kubectl")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("a",{parentName:"li",href:"https://learn.hashicorp.com/tutorials/terraform/install-cli"},"terraform")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/argoproj/argo-workflows/releases/latest"},"Argo WorkflowCLI"))),(0,r.kt)("h2",{id:"deploy"},"Deploy"),(0,r.kt)("p",null,"To provision this example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/awslabs/data-on-eks.git\ncd data-on-eks/schedulers/terraform/argo-workflow\n\nregion=<your region> # set region variable for following commands\nterraform init\nterraform apply -var region=$region #defaults to us-west-2\n")),(0,r.kt)("p",null,"Enter ",(0,r.kt)("inlineCode",{parentName:"p"},"yes")," at command prompt to apply"),(0,r.kt)("p",null,"The following components are provisioned in your environment:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"A sample VPC, 2 Private Subnets and 2 Public Subnets"),(0,r.kt)("li",{parentName:"ul"},"Internet gateway for Public Subnets and NAT Gateway for Private Subnets"),(0,r.kt)("li",{parentName:"ul"},"EKS Cluster Control plane with one managed node group"),(0,r.kt)("li",{parentName:"ul"},"EKS Managed Add-ons: VPC_CNI, CoreDNS, Kube_Proxy, EBS_CSI_Driver"),(0,r.kt)("li",{parentName:"ul"},"K8S Metrics Server, CoreDNS Autoscaler, Cluster Autoscaler, AWS for FluentBit, Karpenter, Argo Workflows, Argo Events, Kube Prometheus Stack, Spark Operator and Yunikorn Scheduler"),(0,r.kt)("li",{parentName:"ul"},"K8s roles and rolebindings for Argo Workflows and Argo Events")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"terraform-output",src:a(4534).Z,width:"812",height:"94"})),(0,r.kt)("h2",{id:"validate"},"Validate"),(0,r.kt)("p",null,"The following command will update the ",(0,r.kt)("inlineCode",{parentName:"p"},"kubeconfig")," on your local machine and allow you to interact with your EKS Cluster using ",(0,r.kt)("inlineCode",{parentName:"p"},"kubectl")," to validate the deployment."),(0,r.kt)("h3",{id:"run-update-kubeconfig-command"},"Run ",(0,r.kt)("inlineCode",{parentName:"h3"},"update-kubeconfig")," command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"aws eks --region eu-west-1 update-kubeconfig --name argoworkflows-eks\n")),(0,r.kt)("h3",{id:"list-the-nodes"},"List the nodes"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl get nodes\n\n# Output should look like below\nNAME                                       STATUS   ROLES    AGE   VERSION\nip-10-1-0-189.eu-west-1.compute.internal   Ready    <none>   10m   v1.27.3-eks-a5565ad\nip-10-1-0-240.eu-west-1.compute.internal   Ready    <none>   10m   v1.27.3-eks-a5565ad\nip-10-1-1-135.eu-west-1.compute.internal   Ready    <none>   10m   v1.27.3-eks-a5565ad\n")),(0,r.kt)("h3",{id:"list-the-namespaces-in-eks-cluster"},"List the namespaces in EKS cluster"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl get ns\n\n# Output should look like below\nNAME                    STATUS   AGE\nargo-events             Active   7m45s\nargo-workflows           Active   8m25s\nspark-team-a            Active   5m51s\ndefault                 Active   25m\nkarpenter               Active   21m\nkube-node-lease         Active   25m\nkube-prometheus-stack   Active   8m5s\nkube-public             Active   25m\nkube-system             Active   25m\nspark-operator          Active   5m43s\nyunikorn                Active   5m44s\n")),(0,r.kt)("h3",{id:"access-argo-workflow-webui"},"Access Argo Workflow WebUI"),(0,r.kt)("p",null,"Get the load balancer url:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl -n argo-workflows get service argo-workflows-server -o jsonpath=\"{.status.loadBalancer.ingress[*].hostname}{'\\n'}\"\n")),(0,r.kt)("p",null,"Copy and paste the result in your browser.\nThe initial username is ",(0,r.kt)("inlineCode",{parentName:"p"},"admin"),". The login token is autogenerated and you can get it by running the following command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"argo auth token # get login token\n\n# result:\nBearer k8s-aws-v1.aHR0cHM6Ly9zdHMudXMtd2VzdC0yLmFtYXpvbmF3cy5jb20vP0FjdGlvbj1HZXRDYWxsZXJJZGVudGl0eSZWZXJzaW9uPTIwMTEtMDYtMTUmWC1BbXotQWxnb3JpdGhtPUFXUzQtSE1BQy1TSEEyNTYmWC1BbXotQ3JlZGVudGlhbD1BS0lBVkNWNFhDV1dLUjZGVTRGMiUyRjIwMjIxMDEzJTJGdXMtd2VzdC0yJTJGc3RzJTJGYXdzNF9yZXF1ZXN0JlgtQW16LURhdGU9MjAyMjEwMTNUMDIyODAyWiZYLUFtei1FeHBpcmVzPTYwJlgtQW16LVNpZ25lZEhlYWRlcnM9aG9zdCUzQngtazhzLWF3cy1pZCZYLUFtei1TaWduYXR1cmU9NmZiNmMxYmQ0MDQyMWIwNTI3NjY4MzZhMGJiNmUzNjg1MTk1YmM0NDQzMjIyMTg5ZDNmZmE1YzJjZmRiMjc4OA\n")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"argo-workflow-login",src:a(6939).Z,width:"1568",height:"764"})),(0,r.kt)("h3",{id:"submit-spark-job-with-argo-workflow"},"Submit Spark Job with Argo Workflow"),(0,r.kt)("p",null,"Export EKS API from ",(0,r.kt)("inlineCode",{parentName:"p"},"terraform output")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'eks_api_url=https://ABCDEFG1234567890.yl4.eu-west-2.eks.amazonaws.com\n\ncat workflow-examples/argo-spark.yaml | sed "s/<your_eks_api_server_url>/$eks_api_url/g" | kubectl apply -f -\n\nkubectl get wf -n argo-workflows\nNAME    STATUS    AGE   MESSAGE\nspark   Running   8s  \n')),(0,r.kt)("p",null,"You can also check the workflow status from Web UI"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"argo-wf-spark",src:a(3184).Z,width:"1904",height:"776"})),(0,r.kt)("h3",{id:"submit-spark-job-with-spark-operator-and-argo-workflow"},"Submit Spark Job with Spark Operator and Argo Workflow"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl apply -f workflow-examples/argo-spark-operator.yaml\n\nkubectl get wf -n argo-workflows\nNAME             STATUS      AGE     MESSAGE\nspark            Succeeded   3m58s  \nspark-operator   Running     5s  \n")),(0,r.kt)("p",null,"The workflow status from web UI"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"argo-wf-spark-operator",src:a(6646).Z,width:"1710",height:"790"})),(0,r.kt)("h2",{id:"trigger-a-workflow-to-create-a-spark-job-based-on-sqs-message"},"Trigger a workflow to create a spark job based on SQS message"),(0,r.kt)("h3",{id:"install-eventbus-which-is-for-event-transmission-in-argo-events"},"Install ",(0,r.kt)("a",{parentName:"h3",href:"https://argoproj.github.io/argo-events/eventbus/eventbus/"},"eventbus")," which is for event transmission in argo events"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl apply -f argo-events-manifests/eventbus.yaml\n")),(0,r.kt)("h3",{id:"deploy-eventsource-sqsyaml-to-link-with-external-sqs"},"Deploy ",(0,r.kt)("inlineCode",{parentName:"h3"},"eventsource-sqs.yaml")," to link with external SQS"),(0,r.kt)("p",null,"In this case, we configure a EventSource to license to the queue ",(0,r.kt)("inlineCode",{parentName:"p"},"test1")," in region ",(0,r.kt)("inlineCode",{parentName:"p"},"us-east-1"),". The eventsource is capable of monitoring events across regions, so the Amazon EKS cluster and Amazon SQS queue don\u2019t need to be located in the same Region."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'queue_name=test1\nregion_sqs=us-east-1\n\ncat argo-events-manifests/eventsource-sqs.yaml | sed "s/<region_sqs>/$region_sqs/g;s/<queue_name>/$queue_name/g" | kubectl apply -f -\n')),(0,r.kt)("p",null,"Let's create that queue in your account."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'# create a queue\nqueue_url=$(aws sqs create-queue --queue-name $queue_name --region $region_sqs --output text)\n\n# get your queue arn\nsqs_queue_arn=$(aws sqs get-queue-attributes --queue-url $queue_url --attribute-names QueueArn --region $region_sqs --query "Attributes.QueueArn" --output text)\n\ntemplate=`cat argo-events-manifests/sqs-accesspolicy.json | sed -e "s|<sqs_queue_arn>|$sqs_queue_arn|g;s|<your_event_irsa_arn>|$your_event_irsa_arn|g"`\n\naws sqs set-queue-attributes --queue-url $queue_url --attributes $template --region $region_sqs\n')),(0,r.kt)("h3",{id:"deploy-sensor-rbacyaml-and-sensor-sqs-spark-crossnsyaml-for-triggering-workflow"},"Deploy ",(0,r.kt)("inlineCode",{parentName:"h3"},"sensor-rbac.yaml")," and ",(0,r.kt)("inlineCode",{parentName:"h3"},"sensor-sqs-spark-crossns.yaml")," for triggering workflow"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl apply -f argo-events-manifests/sensor-rbac.yaml\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cd workflow-examples\n")),(0,r.kt)("p",null,"Update the variables in Shell script and execute"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"./taxi-trip-execute.sh\n")),(0,r.kt)("p",null,"Update YAML file and run the below command"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl apply -f sensor-sqs-sparkjobs.yaml\n")),(0,r.kt)("h3",{id:"verify-argo-events-namespace"},"Verify argo-events namespace"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl get all,eventbus,EventSource,sensor,sa,role,rolebinding -n argo-events\n\n# Output should look like below\nNAME                                                      READY   STATUS    RESTARTS   AGE\npod/argo-events-controller-manager-bfb894cdb-26qw7        1/1     Running   0          18m\npod/aws-sqs-crossns-spark-sensor-zkgz5-6584787c47-zjm9p   1/1     Running   0          44s\npod/aws-sqs-eventsource-544jd-8fccc6f8-w6ssd              1/1     Running   0          4m45s\npod/eventbus-default-stan-0                               2/2     Running   0          5m21s\npod/eventbus-default-stan-1                               2/2     Running   0          5m13s\npod/eventbus-default-stan-2                               2/2     Running   0          5m11s\npod/events-webhook-6f8d9fdc79-l9q9w                       1/1     Running   0          18m\n\nNAME                                TYPE        CLUSTER-IP     EXTERNAL-IP   PORT(S)                      AGE\nservice/eventbus-default-stan-svc   ClusterIP   None           <none>        4222/TCP,6222/TCP,8222/TCP   5m21s\nservice/events-webhook              ClusterIP   172.20.4.211   <none>        443/TCP                      18m\n\nNAME                                                 READY   UP-TO-DATE   AVAILABLE   AGE\ndeployment.apps/argo-events-controller-manager       1/1     1            1           18m\ndeployment.apps/aws-sqs-crossns-spark-sensor-zkgz5   1/1     1            1           44s\ndeployment.apps/aws-sqs-eventsource-544jd            1/1     1            1           4m45s\ndeployment.apps/events-webhook                       1/1     1            1           18m\n\nNAME                                                            DESIRED   CURRENT   READY   AGE\nreplicaset.apps/argo-events-controller-manager-bfb894cdb        1         1         1       18m\nreplicaset.apps/aws-sqs-crossns-spark-sensor-zkgz5-6584787c47   1         1         1       44s\nreplicaset.apps/aws-sqs-eventsource-544jd-8fccc6f8              1         1         1       4m45s\nreplicaset.apps/events-webhook-6f8d9fdc79                       1         1         1       18m\n\nNAME                                     READY   AGE\nstatefulset.apps/eventbus-default-stan   3/3     5m21s\n\nNAME                           AGE\neventbus.argoproj.io/default   5m22s\n\nNAME                              AGE\neventsource.argoproj.io/aws-sqs   4m46s\n\nNAME                                       AGE\nsensor.argoproj.io/aws-sqs-crossns-spark   45s\n\nNAME                                            SECRETS   AGE\nserviceaccount/argo-events-controller-manager   0         18m\nserviceaccount/argo-events-events-webhook       0         18m\nserviceaccount/default                          0         18m\nserviceaccount/event-sa                         0         16m\nserviceaccount/operate-workflow-sa              0         53s\n\nNAME                                                   CREATED AT\nrole.rbac.authorization.k8s.io/operate-workflow-role   2023-07-24T18:52:30Z\n\nNAME                                                                  ROLE                         AGE\nrolebinding.rbac.authorization.k8s.io/operate-workflow-role-binding   Role/operate-workflow-role   52s\n")),(0,r.kt)("h3",{id:"test-from-sqs"},"Test from SQS"),(0,r.kt)("p",null,"Send a message from SQS: ",(0,r.kt)("inlineCode",{parentName:"p"},'{"message": "hello"}')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'aws sqs send-message --queue-url $queue_url --message-body \'{"message": "hello"}\' --region $region_sqs\n')),(0,r.kt)("p",null,"Argo Events would capture the message and trigger Argo Workflows to create a workflow for spark jobs."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl get wf -A\n\n# Output should look like below\nNAMESPACE        NAME                           STATUS    AGE   MESSAGE\nargo-workflows   aws-sqs-spark-workflow-hh79p   Running   11s  \n")),(0,r.kt)("p",null,"Run the command below to check spark application driver pods and executor pods under spark-team-a namespace."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl get po -n spark-team-a\n\n# Output should look like below\nNAME                               READY   STATUS    RESTARTS   AGE\nevent-wf-sparkapp-tcxl8-driver     1/1     Running   0          45s\npythonpi-a72f5f89894363d2-exec-1   1/1     Running   0          16s\npythonpi-a72f5f89894363d2-exec-2   1/1     Running   0          16s\n")),(0,r.kt)("p",null,"See the SQS workflow status in web UI"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"argo-wf-spark-operator",src:a(4435).Z,width:"3956",height:"1964"})),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"argo-wf-spark-operator",src:a(7415).Z,width:"3956",height:"1520"})),(0,r.kt)("h2",{id:"destroy"},"Destroy"),(0,r.kt)("p",null,"To teardown and remove the resources created in this example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl delete -f argo-events-manifests/.\n\n./cleanup.sh\n")))}k.isMDXComponent=!0},6646:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/argo-wf-spark-operator-ff79e6e70984bda22112c899e501e0c5.png"},3184:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/argo-wf-spark-5b904b96ed2057519c456d8717f024a6.png"},7415:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/argo-wf-sqs-spark-tree-45d26e933bee735a4a35f9c07734c033.png"},4435:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/argo-wf-sqs-spark-bdbbd935219cd810dfda7845e54848bd.png"},6939:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/argo-workflow-login-684a2020b281eb65eaf4eb5a87dddc1a.png"},4534:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/terraform-output-argo-378b3afed510645f9af681a777b53316.png"}}]);