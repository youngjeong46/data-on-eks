"use strict";(self.webpackChunkdoeks_website=self.webpackChunkdoeks_website||[]).push([[7653],{3905:(e,a,r)=>{r.d(a,{Zo:()=>p,kt:()=>b});var t=r(7294);function n(e,a,r){return a in e?Object.defineProperty(e,a,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[a]=r,e}function o(e,a){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),r.push.apply(r,t)}return r}function i(e){for(var a=1;a<arguments.length;a++){var r=null!=arguments[a]?arguments[a]:{};a%2?o(Object(r),!0).forEach((function(a){n(e,a,r[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(r,a))}))}return e}function s(e,a){if(null==e)return{};var r,t,n=function(e,a){if(null==e)return{};var r,t,n={},o=Object.keys(e);for(t=0;t<o.length;t++)r=o[t],a.indexOf(r)>=0||(n[r]=e[r]);return n}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)r=o[t],a.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var m=t.createContext({}),l=function(e){var a=t.useContext(m),r=a;return e&&(r="function"==typeof e?e(a):i(i({},a),e)),r},p=function(e){var a=l(e.components);return t.createElement(m.Provider,{value:a},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},u=t.forwardRef((function(e,a){var r=e.components,n=e.mdxType,o=e.originalType,m=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),c=l(r),u=n,b=c["".concat(m,".").concat(u)]||c[u]||d[u]||o;return r?t.createElement(b,i(i({ref:a},p),{},{components:r})):t.createElement(b,i({ref:a},p))}));function b(e,a){var r=arguments,n=a&&a.mdxType;if("string"==typeof e||n){var o=r.length,i=new Array(o);i[0]=u;var s={};for(var m in a)hasOwnProperty.call(a,m)&&(s[m]=a[m]);s.originalType=e,s[c]="string"==typeof e?e:n,i[1]=s;for(var l=2;l<o;l++)i[l]=r[l];return t.createElement.apply(null,i)}return t.createElement.apply(null,r)}u.displayName="MDXCreateElement"},787:(e,a,r)=>{r.r(a),r.d(a,{assets:()=>m,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var t=r(7462),n=(r(7294),r(3905));const o={sidebar_position:2,sidebar_label:"EMR on EKS Observability"},i="EMR on EKS Observability",s={unversionedId:"blueprints/amazon-emr-on-eks/emr-eks-observability",id:"blueprints/amazon-emr-on-eks/emr-eks-observability",title:"EMR on EKS Observability",description:"Monitoring Amazon EMR on EKS with Amazon Managed Prometheus and Amazon Managed Grafana",source:"@site/docs/blueprints/amazon-emr-on-eks/emr-eks-observability.md",sourceDirName:"blueprints/amazon-emr-on-eks",slug:"/blueprints/amazon-emr-on-eks/emr-eks-observability",permalink:"/data-on-eks/docs/blueprints/amazon-emr-on-eks/emr-eks-observability",draft:!1,editUrl:"https://github.com/awslabs/data-on-eks/blob/main/website/docs/blueprints/amazon-emr-on-eks/emr-eks-observability.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,sidebar_label:"EMR on EKS Observability"},sidebar:"blueprints",previous:{title:"EMR on EKS with Karpenter",permalink:"/data-on-eks/docs/blueprints/amazon-emr-on-eks/emr-eks-karpenter"},next:{title:"EMR Runtime with Spark Operator",permalink:"/data-on-eks/docs/blueprints/amazon-emr-on-eks/emr-eks-spark-operator"}},m={},l=[{value:"Monitoring Amazon EMR on EKS with Amazon Managed Prometheus and Amazon Managed Grafana",id:"monitoring-amazon-emr-on-eks-with-amazon-managed-prometheus-and-amazon-managed-grafana",level:2},{value:"Architecture",id:"architecture",level:3},{value:"Grafana Dashboard for Spark",id:"grafana-dashboard-for-spark",level:3}],p={toc:l},c="wrapper";function d(e){let{components:a,...o}=e;return(0,n.kt)(c,(0,t.Z)({},p,o,{components:a,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"emr-on-eks-observability"},"EMR on EKS Observability"),(0,n.kt)("h2",{id:"monitoring-amazon-emr-on-eks-with-amazon-managed-prometheus-and-amazon-managed-grafana"},(0,n.kt)("a",{parentName:"h2",href:"https://aws.amazon.com/blogs/mt/monitoring-amazon-emr-on-eks-with-amazon-managed-prometheus-and-amazon-managed-grafana/"},"Monitoring Amazon EMR on EKS with Amazon Managed Prometheus and Amazon Managed Grafana")),(0,n.kt)("p",null,"In this post, we will learn to build end-to-end observability for EMR on EKS Spark workloads by leveraging Amazon Managed Service for Prometheus to collect and store the metrics generated by Spark Applications. We will then use Amazon Managed Grafana to build dashboards for monitoring use cases"),(0,n.kt)("p",null,"Checkout the full blog ",(0,n.kt)("a",{parentName:"p",href:"https://aws.amazon.com/blogs/mt/monitoring-amazon-emr-on-eks-with-amazon-managed-prometheus-and-amazon-managed-grafana/"},"here")),(0,n.kt)("h3",{id:"architecture"},"Architecture"),(0,n.kt)("p",null,"The following diagram illustrates the solution architecture for scraping Spark Driver and Executors\u2019 metrics, as well as writing to Amazon Managed Service for Prometheus."),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"emr-eks-amp-amg",src:r(28).Z,width:"1084",height:"637"})),(0,n.kt)("h3",{id:"grafana-dashboard-for-spark"},"Grafana Dashboard for Spark"),(0,n.kt)("p",null,"The following Grafana dashboard displays the EMR on EKS Spark job metrics with Driver and Executor details."),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"emr-eks-amp-amg-output",src:r(5437).Z,width:"1346",height:"817"})))}d.isMDXComponent=!0},5437:(e,a,r)=>{r.d(a,{Z:()=>t});const t=r.p+"assets/images/emr-eks-amp-amg-output-fa8bc3f3183fd9d820744778a6a7888b.png"},28:(e,a,r)=>{r.d(a,{Z:()=>t});const t=r.p+"assets/images/emr-eks-amp-amg-0effdc2ebf0db702009a52b77af6ca21.png"}}]);